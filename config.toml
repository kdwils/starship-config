# Warning: This config does not include keys that have an unset value

# $all is shorthand for $username$hostname$localip$shlvl$singularity$kubernetes$directory$vcsh$fossil_branch$git_branch$git_commit$git_state$git_metrics$git_status$hg_branch$pijul_channel$docker_context$package$bun$c$cmake$cobol$daml$dart$deno$dotnet$elixir$elm$erlang$fennel$golang$gradle$haskell$haxe$helm$java$julia$kotlin$lua$nim$nodejs$ocaml$opa$perl$php$pulumi$purescript$python$raku$rlang$red$ruby$rust$scala$swift$terraform$vlang$vagrant$zig$buf$guix_shell$nix_shell$conda$meson$spack$memory_usage$aws$gcloud$openstack$azure$env_var$crystal$custom$sudo$cmd_duration$line_break$jobs$battery$time$status$container$os$shell$character
"$schema" = "https://starship.rs/config-schema.json"
format = "$all"
right_format = ""
continuation_prompt = "[∙](bright-black) "
scan_timeout = 30
command_timeout = 500
add_newline = true

[aws]
disabled = true

[azure]
disabled = true

[battery]
disabled = true

[[battery.display]]
threshold = 10
style = "red bold"

[buf]
format = "with [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🐃 "
style = "bold blue"
disabled = false
detect_extensions = []
detect_files = [
    "buf.yaml",
    "buf.gen.yaml",
    "buf.work.yaml",
]
detect_folders = []

[bun]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🍞 "
style = "bold red"
disabled = false
detect_extensions = []
detect_files = [
    "bun.lockb",
    "bunfig.toml",
]
detect_folders = []

[character]
format = "$symbol "
success_symbol = "[➜](bold green)"
error_symbol = "[✗](bold red)"
vimcmd_symbol = "[❮](bold green)"
vimcmd_visual_symbol = "[❮](bold yellow)"
vimcmd_replace_symbol = "[❮](bold purple)"
vimcmd_replace_one_symbol = "[❮](bold purple)"
disabled = false

[cmd_duration]
min_time = 4
format = "took [$duration]($style) "
style = "bold italic red"
show_milliseconds = false
disabled = true
show_notifications = false
min_time_to_notify = 45000

[directory]
truncation_length = 10
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true
format = "[$path]($style)[$read_only]($read_only_style) "
repo_root_format = "[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) "
style = "bold green"
disabled = false
read_only = " "
read_only_style = "red"
truncation_symbol = ""
home_symbol = "~"
use_os_path_sep = true

[directory.substitutions]

[docker_context]
symbol = " "
style = "blue bold"
format = "via [$symbol$context]($style) "
only_with_files = true
disabled = false
detect_extensions = []
detect_files = [
    "docker-compose.yml",
    "docker-compose.yaml",
    "Dockerfile",
]
detect_folders = []

[fossil_branch]
disabled = true

[gcloud]
disabled = true

[git_branch]
format = "on [$symbol$branch(:$remote_branch)]($style) "
symbol = " "
style = "bold purple"
truncation_length = 9223372036854775807
truncation_symbol = "…"
only_attached = false
always_show_remote = false
ignore_branches = []
disabled = false

[git_commit]
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = "green bold"
only_detached = true
disabled = false
tag_symbol = " 🏷  "
tag_disabled = true
tag_max_candidates = 0

[git_metrics]
added_style = "bold green"
deleted_style = "bold red"
only_nonzero_diffs = true
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )"
disabled = true

[git_state]
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "bold yellow"
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = false

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "red bold"
stashed = '\$'
ahead = "⇡"
behind = "⇣"
up_to_date = ""
diverged = "⇕"
conflicted = "="
deleted = "✘"
renamed = "»"
modified = "!"
staged = "+"
untracked = "?"
ignore_submodules = false
disabled = false

[golang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = " "
style = "bold cyan"
disabled = true
detect_extensions = ["go"]
detect_files = [
    "go.mod",
    "go.sum",
    "go.work",
    "glide.yaml",
    "Gopkg.yml",
    "Gopkg.lock",
    ".go-version",
]
detect_folders = ["Godeps"]

[helm]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "⎈ "
style = "bold white"
disabled = true
detect_extensions = []
detect_files = [
    "helmfile.yaml",
    "Chart.yaml",
]
detect_folders = []

[hg_branch]
disabled = true

[hostname]
ssh_only = false
ssh_symbol = "🌐 "
trim_at = "."
format = "[$ssh_symbol$hostname]($style) in "
style = "green dimmed bold"
disabled = true

[java]
disabled = true

[jobs]
disabled = true

[julia]
disabled = true

[kotlin]
disabled = true

[kubernetes]
symbol = "☸ "
format = '[$symbol$context( \($namespace\))]($style) in '
style = "cyan bold"
disabled = true
detect_extensions = []
detect_files = []
detect_folders = []

[kubernetes.context_aliases]

[kubernetes.user_aliases]

[line_break]
disabled = false

[localip]
ssh_only = true
format = "[$localipv4]($style) "
style = "yellow bold"
disabled = true

[lua]
disabled = true

[memory_usage]
disabled = true

[meson]
disabled = true

[nim]
disabled = true

[nix_shell]
format = 'via [$symbol$state( \($name\))]($style) '
symbol = "❄️  "
style = "bold blue"
impure_msg = "impure"
pure_msg = "pure"
unknown_msg = ""
disabled = false
heuristic = false

[nodejs]
disabled = true

[ocaml]
format = 'via [$symbol($version )(\($switch_indicator$switch_name\) )]($style)'
version_format = "v${raw}"
global_switch_indicator = ""
local_switch_indicator = "*"
symbol = "🐫 "
style = "bold yellow"
disabled = false
detect_extensions = [
    "opam",
    "ml",
    "mli",
    "re",
    "rei",
]
detect_files = [
    "dune",
    "dune-project",
    "jbuild",
    "jbuild-ignore",
    ".merlin",
]
detect_folders = [
    "_opam",
    "esy.lock",
]

[opa]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🪖  "
style = "bold blue"
disabled = false
detect_extensions = ["rego"]
detect_files = []
detect_folders = []

[openstack]
format = 'on [$symbol$cloud(\($project\))]($style) '
symbol = "☁️  "
style = "bold yellow"
disabled = false

[os]
format = "[$symbol]($style)"
style = "bold white"
disabled = true

[os.symbols]
Alpaquita = "🔔 "
Alpine = "🏔️ "
Amazon = "🙂 "
Android = "🤖 "
Arch = "🎗️ "
Artix = "🎗️ "
CentOS = "💠 "
Debian = "🌀 "
DragonFly = "🐉 "
Emscripten = "🔗 "
EndeavourOS = "🚀 "
Fedora = "🎩 "
FreeBSD = "😈 "
Garuda = "🦅 "
Gentoo = "🗜️ "
HardenedBSD = "🛡️ "
Illumos = "🐦 "
Linux = "🐧 "
Mabox = "📦 "
Macos = "🍎 "
Manjaro = "🥭 "
Mariner = "🌊 "
MidnightBSD = "🌘 "
Mint = "🌿 "
NetBSD = "🚩 "
NixOS = "❄️ "
OpenBSD = "🐡 "
OpenCloudOS = "☁️ "
openEuler = "🦉 "
openSUSE = "🦎 "
OracleLinux = "🦴 "
Pop = "🍭 "
Raspbian = "🍓 "
Redhat = "🎩 "
RedHatEnterprise = "🎩 "
Redox = "🧪 "
Solus = "⛵ "
SUSE = "🦎 "
Ubuntu = "🎯 "
Unknown = "❓ "
Windows = "🪟 "

[package]
disabled = true

[python]
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = [
    "python",
    "python3",
    "python2",
]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = "v${raw}"
style = "yellow bold"
symbol = "🐍 "
disabled = true
detect_extensions = ["py"]
detect_files = [
    "requirements.txt",
    ".python-version",
    "pyproject.toml",
    "Pipfile",
    "tox.ini",
    "setup.py",
    "__init__.py",
]
detect_folders = []

[raku]
format = "via [$symbol($version-$vm_version )]($style)"
version_format = "${raw}"
symbol = "🦋 "
style = "149 bold"
disabled = true
detect_extensions = [
    "p6",
    "pm6",
    "pod6",
    "raku",
    "rakumod",
]
detect_files = ["META6.json"]
detect_folders = []

[red]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🔺 "
style = "red bold"
disabled = true
detect_extensions = [
    "red",
    "reds",
]
detect_files = []
detect_folders = []

[rlang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
style = "blue bold"
symbol = "📐 "
disabled = true
detect_extensions = [
    "R",
    "Rd",
    "Rmd",
    "Rproj",
    "Rsx",
]
detect_files = [".Rprofile"]
detect_folders = [".Rproj.user"]

[ruby]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "💎 "
style = "bold red"
disabled = true
detect_extensions = ["rb"]
detect_files = [
    "Gemfile",
    ".ruby-version",
]
detect_folders = []
detect_variables = [
    "RUBY_VERSION",
    "RBENV_VERSION",
]

[rust]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🦀 "
style = "bold red"
disabled = true
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []

[scala]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
disabled = true
style = "red bold"
symbol = "🆂 "
detect_extensions = [
    "sbt",
    "scala",
]
detect_files = [
    ".scalaenv",
    ".sbtenv",
    "build.sbt",
]
detect_folders = [".metals"]

[shell]
format = "[$indicator]($style) "
bash_indicator = "bsh"
fish_indicator = "fsh"
zsh_indicator = "zsh"
powershell_indicator = "psh"
ion_indicator = "ion"
elvish_indicator = "esh"
tcsh_indicator = "tsh"
nu_indicator = "nu"
xonsh_indicator = "xsh"
cmd_indicator = "cmd"
unknown_indicator = ""
style = "white bold"
disabled = true

[shlvl]
threshold = 2
format = "[$symbol$shlvl]($style) "
symbol = "↕️  "
repeat = false
style = "bold yellow"
disabled = true

[singularity]
symbol = ""
format = '[$symbol\[$env\]]($style) '
style = "blue bold dimmed"
disabled = false

[spack]
truncation_length = 1
format = "via [$symbol$environment]($style) "
symbol = "🅢 "
style = "blue bold"
disabled = false

[status]
format = "[$symbol$status]($style) "
symbol = "❌"
success_symbol = ""
not_executable_symbol = "🚫"
not_found_symbol = "🔍"
sigint_symbol = "🧱"
signal_symbol = "⚡"
style = "bold red"
map_symbol = false
recognize_signal_code = true
pipestatus = false
pipestatus_separator = "|"
pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'
disabled = true

[sudo]
format = "[as $symbol]($style)"
symbol = "🧙 "
style = "bold blue"
allow_windows = false
disabled = true

[swift]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🐦 "
style = "bold 202"
disabled = false
detect_extensions = ["swift"]
detect_files = ["Package.swift"]
detect_folders = []

[terraform]
format = "via [$symbol$workspace]($style) "
version_format = "v${raw}"
symbol = "💠 "
style = "bold 105"
disabled = false
detect_extensions = [
    "tf",
    "tfplan",
    "tfstate",
]
detect_files = []
detect_folders = [".terraform"]

[time]
format = "at [$time]($style) "
style = "bold yellow"
use_12hr = false
disabled = true
utc_time_offset = "local"
time_range = "-"

[username]
format = "[$user]($style) "
style_root = "red bold"
style_user = "blue bold"
show_always = true
disabled = false

[vagrant]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "⍱ "
style = "cyan bold"
disabled = false
detect_extensions = []
detect_files = ["Vagrantfile"]
detect_folders = []

[vcsh]
symbol = ""
style = "bold yellow"
format = "vcsh [$symbol$repo]($style) "
disabled = false

[vlang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "V "
style = "blue bold"
disabled = false
detect_extensions = ["v"]
detect_files = [
    "v.mod",
    "vpkg.json",
    ".vpkg-lock.json",
]
detect_folders = []

[zig]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "↯ "
style = "bold yellow"
disabled = false
detect_extensions = ["zig"]
detect_files = []
detect_folders = []